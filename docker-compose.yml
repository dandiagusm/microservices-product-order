version: "3.8"

services:
  product-db:
    image: postgres:15
    container_name: product-db
    environment:
      POSTGRES_USER: product_user
      POSTGRES_PASSWORD: product_pass
      POSTGRES_DB: products_db
    ports:
      - "5433:5432"
    volumes:
      - product-db-data:/var/lib/postgresql/data
    networks:
      - appnet

  order-db:
    image: postgres:15
    container_name: order-db
    environment:
      POSTGRES_USER: order_user
      POSTGRES_PASSWORD: order_pass
      POSTGRES_DB: orders_db
    ports:
      - "5434:5432"
    volumes:
      - order-db-data:/var/lib/postgresql/data
    networks:
      - appnet

  product-redis:
    image: redis:7.4
    container_name: product-redis
    ports:
      - "6379:6379"
    networks:
      - appnet

  order-redis:
    image: redis:7.4
    container_name: order-redis
    ports:
      - "6380:6379"
    networks:
      - appnet

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - appnet

  product-service:
    build:
      context: ./product-service
    container_name: product-service
    depends_on:
      - product-db
      - product-redis
      - rabbitmq
    restart: on-failure
    environment:
      PORT: 3001
      DB_HOST: product-db
      DB_PORT: 5432
      DB_USER: product_user
      DB_PASSWORD: product_pass
      DB_NAME: products_db
      REDIS_HOST: product-redis
      REDIS_PORT: 6379
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      SERVICE_NAME: product-service
    ports:
      - "3001:3001"
    networks:
      - appnet

  order-service:
    build:
      context: ./order-service
    container_name: order-service
    depends_on:
      - order-db
      - order-redis
      - rabbitmq
      - product-service
    restart: on-failure
    environment:
      PORT: 3002
      DB_HOST: order-db
      DB_PORT: 5432
      DB_USER: order_user
      DB_PASSWORD: order_pass
      DB_NAME: orders_db
      REDIS_HOST: order-redis
      REDIS_PORT: 6379
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      SERVICE_NAME: order-service
      PRODUCT_SERVICE_URL: http://product-service:3001
    ports:
      - "3002:3002"
    networks:
      - appnet

  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    depends_on:
      - product-service
      - order-service
    restart: on-failure
    environment:
      PORT: 4000
      PRODUCT_SERVICE_URL: http://product-service:3001
      ORDER_SERVICE_URL: http://order-service:3002
    ports:
      - "4000:4000"
    networks:
      - appnet

  k6:
    image: grafana/k6:latest
    container_name: k6
    volumes:
      - ./k6-tests:/scripts
    working_dir: /scripts
    entrypoint: ["/bin/sh", "-c"]
    command: ["tail -f /dev/null"]
    networks:
      - appnet

networks:
  appnet:
    driver: bridge

volumes:
  product-db-data:
  order-db-data: