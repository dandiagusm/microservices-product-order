services:
  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: microservices_db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - microservices_net

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - microservices_net

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - microservices_net

  # product-service:
  #   build: ./product-service
  #   container_name: product-service
  #   restart: always
  #   env_file:
  #     - ./product-service/.env
  #   ports:
  #     - "3001:3001"
  #   depends_on:
  #     - db
  #     - redis
  #     - rabbitmq
  #   networks:
  #     - microservices_net
  product-service:
    build: ./product-service
    container_name: product-service
    restart: always
    env_file:
      - ./product-service/.env
    ports:
      - "3001:3001"
    depends_on:
      - redis
      - rabbitmq
    networks:
      - microservices_net

  # order-service:
  #   build: ./order-service
  #   container_name: order-service
  #   restart: always
  #   env_file:
  #     - ./order-service/.env
  #   ports:
  #     - "3002:3002"
  #   depends_on:
  #     - db
  #     - redis
  #     - rabbitmq
  #     - product-service
  #   networks:
  #     - microservices_net

  # gateway:
  #   build: ./gateway
  #   container_name: gateway
  #   restart: always
  #   env_file:
  #     - ./gateway/.env
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - product-service
  #     - order-service
  #   networks:
  #     - microservices_net

networks:
  microservices_net:
    driver: bridge

volumes:
  db_data:
